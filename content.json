{"meta":{"title":"niu","subtitle":null,"description":null,"author":"niushiyi","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"闭包现象","slug":"bibao","date":"2017-12-29T06:15:52.568Z","updated":"2017-12-29T06:26:39.479Z","comments":true,"path":"2017/12/29/bibao/","link":"","permalink":"http://yoursite.com/2017/12/29/bibao/","excerpt":"","text":"在一个函数内部，有权访问另一个函数中的变量（并且能够随时访问）！ 尽量不要去看长篇大论关于闭包的解释，很容易把自己绕晕。看一些很容易理解的例子帮助你更好的理解闭包才是最好的！ 闭包 一 : 访问变量局限性大，不能自由访问。 12345678function show1() &#123; var a = 10; function show2() &#123; console.log(a) &#125; show2();&#125;show1(); 闭包 二 : 可以自由访问。1234567function show() &#123; var a = 10; return: function() &#123; console.log(a) &#125;&#125;show()(); 常见闭包一般出现在DOM节点操作中，看下面典型例子！ 12345678910111213141516为每一个li添加点击事件，并且弹出他所在ul中的位置。&lt;ul id=&quot;list&quot;&gt; &lt;li&gt;aaa&lt;/li&gt; &lt;li&gt;aaa&lt;/li&gt; &lt;li&gt;aaa&lt;/li&gt;&lt;/ul&gt;var lis=document.getElementById(&quot;list&quot;).getElementsByTagName(&quot;li&quot;);for(var i=0;i&lt;lis.length;i++)&#123; lis[i]._index=i;//为每个li添加一个属性并且保存他的所在的位置。 lis[i].onclick=function()&#123; alert(i)//无论你点那个，弹出的都是3! alert(this._index);//可以弹出相应的位置!this指你事件触发者.即你点击的 li ! &#125;&#125; 其实闭包现象随处可见，虽然他很容易出问题且不容易调试 所以你也可以去试试啦，听着很牛逼的闭包，其实也没什么，哈哈哈哈。。。。","categories":[],"tags":[]},{"title":"niushiyi","slug":"me","date":"2017-12-28T06:20:01.038Z","updated":"2017-12-29T05:50:23.320Z","comments":true,"path":"2017/12/28/me/","link":"","permalink":"http://yoursite.com/2017/12/28/me/","excerpt":"","text":"Quick StartCreate a new post1$ hexo new \"My New Post\" toc:true","categories":[],"tags":[]},{"title":"niushiyi","slug":"hello-world","date":"2017-12-25T07:35:47.666Z","updated":"2017-12-28T06:25:50.433Z","comments":true,"path":"2017/12/25/hello-world/","link":"","permalink":"http://yoursite.com/2017/12/25/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}